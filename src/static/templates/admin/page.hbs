<main class="container">
    <div id="users-block" class="my-3 p-3 bg-white rounded shadow">
        <h6 class="border-bottom pb-2 mb-0">Registered Users</h6>

        <div id="users-list">
            {{#each users}}
            <div class="media pt-3">
                <img class="mr-2 rounded identicon" data-src="{{Email}}">
                <div class="media-body pb-3 mb-0 small border-bottom">
                    <div class="row justify-content-between">
                        <div class="col">
                            <strong>{{Name}}</strong>
                            {{#if TwoFactorEnabled}}
                            <span class="badge badge-success ml-2">2FA</span>
                            {{/if}}
                            {{#unless _Enabled}}
                            <span class="badge badge-warning ml-2">Disabled</span>
                            {{/unless}}
                            <span class="d-block">{{Email}}</span>
                        </div>
                        <div class="col">
                            <strong> Organizations:</strong>
                            <span class="d-block">
                                {{#each Organizations}}
                                <span class="badge badge-primary" data-orgtype="{{Type}}">{{Name}}</span>
                                {{/each}}
                            </span>
                        </div>
                        <div style="flex: 0 0 240px;">
                            <a class="mr-3" href="#" onclick='deauthUser("{{Id}}")'>Deauthorize sessions</a>
                            <a class="mr-3" href="#" onclick='deleteUser("{{Id}}", "{{Email}}")'>Delete User</a>
                        </div>
                    </div>
                </div>
            </div>
            {{/each}}

        </div>

        <small class="d-block text-right mt-3">
            <a id="reload-btn" href="">Reload users</a>
        </small>
    </div>

    <div id="invite-form-block" class="align-items-center p-3 mb-3 text-white-50 bg-secondary rounded shadow">
        <div>
            <h6 class="mb-0 text-white">Invite User</h6>
            <small>Email:</small>

            <form class="form-inline" id="invite-form">
                <input type="email" class="form-control w-50 mr-2" id="email-invite" placeholder="Enter email">
                <button type="submit" class="btn btn-primary">Invite</button>
            </form>
        </div>
    </div>

    <div id="config-block" class="align-items-center p-3 mb-3 text-white-50 bg-secondary rounded shadow">
        <div>
            <h6 class="text-white">Configuration</h6>
            <form class="form" id="config-form">
                {{#each config}}
                {{#if editable}}
                <div class="form-group row">
                    {{#case type "text" "number"}}
                    <label for="input_{{name}}" class="col-sm-2 col-form-label">{{name}}</label>
                    <div class="col-sm-9">
                        <input class="form-control" id="input_{{name}}" type="{{type}}" name="{{name}}" value="{{value}}"
                            {{#if default}} placeholder="Default: {{default}}" {{/if}}>
                    </div>
                    {{/case}}
                    {{#case type "checkbox"}}
                    <div class="col-sm-2">{{name}}</div>
                    <div class="col-sm-9">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="input_{{name}}" name="{{name}}"
                                {{#if value}} checked {{/if}}>

                            <label class="form-check-label" for="input_{{name}}"> Default: {{default}} </label>
                        </div>
                    </div>
                    {{/case}}
                </div>
                {{/if}}
                {{/each}}
                <button type="submit" class="btn btn-primary">Save</button>
            </form>
        </div>
    </div>
</main>

<style>
    #config-block ::placeholder {
        /* Most modern browsers support this now. */
        color: orangered;
    }
</style>

<script>
    function reload() { window.location.reload(); }
    function identicon(email) {
        const data = new Identicon(md5(email), { size: 48, format: 'svg' });
        return "data:image/svg+xml;base64," + data.toString();
    }
    function _post(url, successMsg, errMsg, data) {
        $.post({
            url: url,
            data: data,
            //async: false,
            contentType: "application/json",
        }).done(function () {
            alert(successMsg);
        }).fail(function (e) {
            const r = e.responseJSON;
            const msg = r ? r.ErrorModel.Message : "Unknown error";
            alert(errMsg + ": " + msg);
        }).always(reload);
    }
    function deleteUser(id, mail) {
        var input_mail = prompt("To delete user '" + mail + "', please type the name below")
        if (input_mail != null) {
            if (input_mail == mail) {
                _post("/admin/users/" + id + "/delete",
                    "User deleted correctly",
                    "Error deleting user");
            } else {
                alert("Wrong email, please try again")
            }
        }
        return false;
    }
    function deauthUser(id) {
        _post("/admin/users/" + id + "/deauth",
            "Sessions deauthorized correctly",
            "Error deauthorizing sessions");
        return false;
    }
    function inviteUser() {
        inv = $("#email-invite");
        data = JSON.stringify({ "email": inv.val() });
        inv.val("");
        _post("/admin/invite/", "User invited correctly",
            "Error inviting user", data);
        return false;
    }
    function getFormData(form) {
        var form_array = form.serializeArray();
        var indexed_array = {};

        $.each(form_array, function (i, v) {
            indexed_array[v.name] = process_value(v.value);
        });

        return indexed_array;
    }
    function process_value(val) {
        val = val.trim();
        if (val === "") { return null; }
        if (!isNaN(val)) { return +val; }
        if (val === "true" || val === "on") { return true; }
        if (val === "false" || val === "off") { return false; }
        return val;
    }
    function saveConfig() {
        data = JSON.stringify(getFormData($("#config-form")));
        _post("/admin/config/", "Config saved correctly",
            "Error saving config", data);
        return false;
    }
    let OrgTypes = {
        "0": { "name": "Owner", "color": "orange" },
        "1": { "name": "Admin", "color": "blueviolet" },
        "2": { "name": "User", "color": "blue" },
        "3": { "name": "Manager", "color": "green" },
    };
    $(window).on('load', function () {
        $("#invite-form").submit(inviteUser);
        $("#config-form").submit(saveConfig);
        $("img.identicon").each(function (i, e) {
            e.src = identicon(e.dataset.src);
        });
        $('[data-orgtype]').each(function (i, e) {
            let orgtype = OrgTypes[e.dataset.orgtype];
            e.style.backgroundColor = orgtype.color;
            e.title = orgtype.name;
        });
    });
</script>